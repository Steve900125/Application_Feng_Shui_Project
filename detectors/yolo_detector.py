from ultralytics import YOLO
from pathlib import Path

def floor_plan_detcte(source, model):

    try :
        model = YOLO( model )  # pretrained YOLOv8n model
        results = model.predict(source, save=True, save_txt=True, save_crop = True, exist_ok=True)  # return a list of Results objects
        return results 
    except Exception as e:
        print(e)
        return None
    
def orientation_classify(ROOT, item, source_path, model):

    # Generated by yolov8
    predict_path = ROOT / 'runs' / 'detect' / 'predict' 
    crops_path = predict_path / 'crops' / item

    # For finding items in crops folder
    source_path = Path(source_path)
    image_base_name = source_path.stem  # stem gives the base name without suffix
    
    # Target item don't exisit 
    if not crops_path.exists():
        return None

    # Find matching image files
    matching_files = list(crops_path.glob(f"{image_base_name}*.jpg"))

    # Check if found files 
    if not matching_files:
        return None
    
    '''Yolo classify the item's orientation'''
    model = YOLO( model )  # pretrained YOLOv8 cls model
    results = model.predict(matching_files)
    item_orient_list = [item.names[item.probs.top1] for item in results]
    
    return item_orient_list

    

        
       